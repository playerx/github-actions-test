name: PR Release
on:
  pull_request:
    types:
      - closed

jobs:
  # bump_version:
  #   name: Bump Version
  #   runs-on: ubuntu-latest
  #   outputs:
  #     new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
  #     changelog: ${{ steps.github_tag_action.outputs.changelog }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Bump version and push tag
  #       id: github_tag_action
  #       uses: mathieudutour/github-tag-action@331898d5052eedac9b15fec867b5ba66ebf9b692
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         release_branches: .*
  #         default_bump: false

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    # needs: bump_version
    # if: ${{ needs.bump_version.outputs.new_tag != null }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open

      # - uses: actions/cache@v2
      #   id: cache
      #   with:
      #     path: '**/node_modules'
      #     key: npm-v2-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: npm-v2-
      # - name: Install dependencies
      #   run: npm ci
      # - name: Build the IPFS bundle
      #   run: npm run build
      - name: Unpin from IPFS
        run: |
          hash=$(curl https://api.pinata.cloud/data/pinList \
                  --header "pinata_api_key: ${{ secrets.PINATA_API_KEY }}" \
                  --header "pinata_secret_api_key: ${{ secrets.PINATA_API_SECRET_KEY }}" \
                  -G \
                  -d status=pinned \
                  -d "metadata[name]=Test-PR-${{ steps.findPr.outputs.pr }}" | jq -r '.rows[0].ipfs_pin_hash')

          curl https://api.pinata.cloud/pinning/unpin/$hash \
                -X DELETE \
                --header "pinata_api_key: ${{ secrets.PINATA_API_KEY }}" \
                --header "pinata_secret_api_key: ${{ secrets.PINATA_API_SECRET_KEY }}"

        # id: upload
        # uses: anantaramdas/ipfs-pinata-deploy-action@39bbda1ce1fe24c69c6f57861b8038278d53688d
        # with:
        #   pin-name: Test-PR-${{ steps.findPr.outputs.pr }}
        #   path: "./build"
        #   pinata-api-key: ${{ secrets.PINATA_API_KEY }}
        #   pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      # - name: Pin to Crust
      #   uses: crustio/ipfs-crust-action@v2.0.3
      #   continue-on-error: true
      #   timeout-minutes: 2
      #   with:
      #     cid: ${{ steps.upload.outputs.hash }}
      #     seeds: ${{ secrets.CRUST_SEEDS }}

      # - name: Convert CIDv0 to CIDv1
      #   id: convert_cidv0
      #   uses: uniswap/convert-cidv0-cidv1@v1.0.0
      #   with:
      #     cidv0: ${{ steps.upload.outputs.hash }}

      # - name: Update DNS with new IPFS hash
      #   env:
      #     CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      #     RECORD_DOMAIN: "daikoku.network"
      #     RECORD_NAME: "_dnslink.beta-app"
      #     CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      #   uses: textileio/cloudflare-update-dnslink@0fe7b7a1ffc865db3a4da9773f0f987447ad5848
      #   with:
      #     cid: ${{ steps.upload.outputs.hash }}

      - uses: mshick/add-pr-comment@v1
        with:
          message: |
            ðŸ“¦ Deployed at:
            https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/

          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]"
          allow-repeats: true
